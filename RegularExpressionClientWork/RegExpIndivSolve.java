package RegularExpressionClientWork;

import java.util.regex.Pattern;

public class RegExpIndivSolve {
    // define these strings for the patterns of your answers above,
    // and build up as suggested in the discussion;

    private static String
            // (?=.*[a-zA-Z])[a-zA-z[_$]&&[^0-9]]+[$_]*  // for 1(a)
            I="(?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*",  // for 1(a)

            //(((?=.*[a-zA-Z])[a-zA-z[_$]&&[^0-9]]+[$_]*)*,*)+((?=.*[a-zA-Z])[a-zA-z[_$]&&[^0-9]]+[$_]*)",  // for 1(b)
            L="(((?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*)\\s*,\\s*)+((?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*)",  // for 1(b)

            //(int)|(char)|(double)|(boolean),  // for 1(c)
            T="(int)|(char)|(double)|(boolean)",  // for 1(c)

            //((int)|(char)|(double)|(boolean))+((((?=.*[a-zA-Z])[a-zA-z[_$]&&[^0-9]]+[$_]*),)*((?=.*[a-zA-Z])[a-zA-z[_$]&&[^0-9]]+[$_]*)),
            prob1d = "((int)|(char)|(double)|(boolean))\\s+((((?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*)\\s*,\\s*)*((?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*))",

            //P=^([1-9]d*|0)$",  // for 2(a)
            P="^([1-9]\\d*|0)$",  // for 2(a)

            //Z="([-]?[1-9]d*|0)",  // for 2(b)
            Z="([-]?[1-9]\\d*|0)",  // for 2(b)

            //B="[-+*%/]",  // for 2(c)
             B="[-\\+\\*%/]",  // for 2(c)

            //[([-]?[1-9]d*|0)(?=.*[a-zA-Z])[a-zA-z[_$]&&[^s0-9]]+[w$_]*][-+*%/](?=.*[a-zA-Z])[a-zA-z[_$]&&[^s0-9]]+[w$_]*",  // for 2(d)
             A="[([-]?[1-9]\\d*|0)(?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*][\\-\\+\\*\\%\\/](?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*",  // for 2(d)

            //prob2e = "((([-]?[1-9]*|0)|((?=.*[a-zA-Z])[a-zA-z[_$]&&[^s0-9]]+[w$_]*))[-+*%/])*[srtn]*(([-]?[1-9]d*|0)|((?=.*[a-zA-Z])[a-zA-z[_$]&&[^0-9]]+[w$_]*))[\\s\\r\\t\\n]*";
            prob2e = "([\\s\\r\\t\\n]*(([-]?[1-9]\\d*|0)|((?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*))[\\s\\r\\t\\n]*[-\\+\\*%/])*[\\s\\r\\t\\n]*(([-]?[1-9]\\d*|0)|((?=.*[a-zA-Z])[a-zA-z[_$]&&[^\\s0-9]]+[\\w$_]*))[\\s\\r\\t\\n]*";





// NOTE, PASSING ALL MY TEST CASES DOES NOT GUARANTEE THAT YOUR
// EXPRESSION IS CORRECT.  I will look at the expression and
// evaluate it for correctness as well as look at your test results.

    private static String[]

            tests1 = {
            "int a|b",
            "inta",
            "charb",
            "doublec",
            "booleand",
            " int a , b, c",
            "double  a , b, c ",
            "   int a , b, c",
            "double  a , b, c   ",
            "int a , b, c",
            "double  a , b, c",
            "char a , b, c",
            "boolean a , b, c",
            "int a,b,c",
            "double  a,b,c",
            "char a,b,c",
            "boolean a,b,c",
            "int a , b , c",
            "double  a ,b   , c",
            "char a  ,b   ,c",
            "boolean a",
            "int$a",
            "double$a",
            "char$a",
            "boolean$a",
            "int_a",
            "double_a",
            "char_a",
            "boolean_a",
            "inta",
            "doublea",
            "chara",
            "booleana",
            "int a , b , c ,",
            "char , a , b , c",
            "",
            "char",
            "double",
            "int",
            "boolean",
            "int a , , b , c",
            "double  a ,b ,  , c",
            "char a d ,b   ,c",
            "boolean a, b c",
            "int a , b, c"
    },

    tests2 = {

            // some valid positive literals

            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "40",
            "50",
            "60",
            "70",
            "80",
            "90",
            "10",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "30",
            "41",
            "52",
            "63",
            "74",
            "85",
            "96",
            "171",
            "282",
            "393",
            "404",
            "515",
            "626",
            "737",
            "848",
            "959",
            "160",
            "100",
            "200",
            "102345678910234567891023456789",
            // some decimal integer numerals, all the positives above and also
            "0",
            "-1",
            "-2",
            "-3",
            "-4",
            "-5",
            "-6",
            "-7",
            "-8",
            "-9",
            "-10",
            "-40",
            "-50",
            "-60",
            "-70",
            "-80",
            "-90",
            "-10",
            "-10",
            "-11",
            "-12",
            "-13",
            "-14",
            "-15",
            "-16",
            "-17",
            "-18",
            "-19",
            "-20",
            "-30",
            "-41",
            "-52",
            "-63",
            "-74",
            "-85",
            "-96",
            "-171",
            "-282",
            "-393",
            "-404",
            "-515",
            "-626",
            "-737",
            "-848",
            "-959",
            "-160",
            "-100",
            "-200",
            "-102345678910234567891023456789",
            // some invalid signed literals
            "+0",
            "+1",
            "+2",
            "+3",
            "+4",
            "+5",
            "+6",
            "+7",
            "+8",
            "+9",
            "-0",
            "- 1",
            "- 2",
            "- 3",
            "- 4",
            "- 5",
            "- 6",
            "- 7",
            "- 8",
            "- 9",
            "- 10",
            "+40",
            "+50",
            "+60",
            "+70",
            "+80",
            "+90",
            "+10",
            "%10",
            "%11",
            "%12",
            "%13",
            "%14",
            "%15",
            "*16",
            "*17",
            "*18",
            "*19",
            "$20",
            "$30",
            "_41",
            "_52",
            "_63",
            "!74",
            "@85",
            "#96",
            "^171",
            "&282",
            "(393",
            ")404",
            "[515",
            "]626",
            "{737",
            "}848",
            ";959",
            ":160",
            "<100",
            ">200",
            "?102345678910234567891023456789",
            "00",
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "010",
            // some valid identifiers
            "a_b_c",
            "$a_b",
            "$1a_2b$3c",
            "$$11aa__2bb$$33cc",
            "_a99",
            "$b44",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            // add $ in front
            "$a",
            "$b",
            "$c",
            "$d",
            "$e",
            "$f",
            "$g",
            "$h",
            "$i",
            "$j",
            "$k",
            "$l",
            "$m",
            "$n",
            "$o",
            "$p",
            "$q",
            "$r",
            "$s",
            "$t",
            "$u",
            "$v",
            "$w",
            "$x",
            "$y",
            "$z",
            "$A",
            "$B",
            "$C",
            "$D",
            "$E",
            "$F",
            "$G",
            "$H",
            "$I",
            "$J",
            "$K",
            "$L",
            "$M",
            "$N",
            "$O",
            "$P",
            "$Q",
            "$R",
            "$S",
            "$T",
            "$U",
            "$V",
            "$W",
            "$X",
            "$Y",
            "$Z",
            // add $ at end
            "a$",
            "b$",
            "c$",
            "d$",
            "e$",
            "f$",
            "g$",
            "h$",
            "i$",
            "j$",
            "k$",
            "l$",
            "m$",
            "n$",
            "o$",
            "p$",
            "q$",
            "r$",
            "s$",
            "t$",
            "u$",
            "v$",
            "w$",
            "x$",
            "y$",
            "z$",
            "A$",
            "B$",
            "C$",
            "D$",
            "E$",
            "F$",
            "G$",
            "H$",
            "I$",
            "J$",
            "K$",
            "L$",
            "M$",
            "N$",
            "O$",
            "P$",
            "Q$",
            "R$",
            "S$",
            "T$",
            "U$",
            "V$",
            "W$",
            "X$",
            "Y$",
            "Z$",
            // add $ at front and end
            "$a$",
            "$b$",
            "$c$",
            "$d$",
            "$e$",
            "$f$",
            "$g$",
            "$h$",
            "$i$",
            "$j$",
            "$k$",
            "$l$",
            "$m$",
            "$n$",
            "$o$",
            "$p$",
            "$q$",
            "$r$",
            "$s$",
            "$t$",
            "$u$",
            "$v$",
            "$w$",
            "$x$",
            "$y$",
            "$z$",
            "$A$",
            "$B$",
            "$C$",
            "$D$",
            "$E$",
            "$F$",
            "$G$",
            "$H$",
            "$I$",
            "$J$",
            "$K$",
            "$L$",
            "$M$",
            "$N$",
            "$O$",
            "$P$",
            "$Q$",
            "$R$",
            "$S$",
            "$T$",
            "$U$",
            "$V$",
            "$W$",
            "$X$",
            "$Y$",
            "$Z$",
            // do the same for underscore instead of $
            "_a",
            "_b",
            "_c",
            "_d",
            "_e",
            "_f",
            "_g",
            "_h",
            "_i",
            "_j",
            "_k",
            "_l",
            "_m",
            "_n",
            "_o",
            "_p",
            "_q",
            "_r",
            "_s",
            "_t",
            "_u",
            "_v",
            "_w",
            "_x",
            "_y",
            "_z",
            "_A",
            "_B",
            "_C",
            "_D",
            "_E",
            "_F",
            "_G",
            "_H",
            "_I",
            "_J",
            "_K",
            "_L",
            "_M",
            "_N",
            "_O",
            "_P",
            "_Q",
            "_R",
            "_S",
            "_T",
            "_U",
            "_V",
            "_W",
            "_X",
            "_Y",
            "_Z",
            // add _ at end
            "a_",
            "b_",
            "c_",
            "d_",
            "e_",
            "f_",
            "g_",
            "h_",
            "i_",
            "j_",
            "k_",
            "l_",
            "m_",
            "n_",
            "o_",
            "p_",
            "q_",
            "r_",
            "s_",
            "t_",
            "u_",
            "v_",
            "w_",
            "x_",
            "y_",
            "z_",
            "A_",
            "B_",
            "C_",
            "D_",
            "E_",
            "F_",
            "G_",
            "H_",
            "I_",
            "J_",
            "K_",
            "L_",
            "M_",
            "N_",
            "O_",
            "P_",
            "Q_",
            "R_",
            "S_",
            "T_",
            "U_",
            "V_",
            "W_",
            "X_",
            "Y_",
            "Z_",
            // add _ at front and end
            "_a_",
            "_b_",
            "_c_",
            "_d_",
            "_e_",
            "_f_",
            "_g_",
            "_h_",
            "_i_",
            "_j_",
            "_k_",
            "_l_",
            "_m_",
            "_n_",
            "_o_",
            "_p_",
            "_q_",
            "_r_",
            "_s_",
            "_t_",
            "_u_",
            "_v_",
            "_w_",
            "_x_",
            "_y_",
            "_z_",
            "_A_",
            "_B_",
            "_C_",
            "_D_",
            "_E_",
            "_F_",
            "_G_",
            "_H_",
            "_I_",
            "_J_",
            "_K_",
            "_L_",
            "_M_",
            "_N_",
            "_O_",
            "_P_",
            "_Q_",
            "_R_",
            "_S_",
            "_T_",
            "_U_",
            "_V_",
            "_W_",
            "_X_",
            "_Y_",
            "_Z_",
            // one $ and one _, $ first
            "$a_",
            "$b_",
            "$c_",
            "$d_",
            "$e_",
            "$f_",
            "$g_",
            "$h_",
            "$i_",
            "$j_",
            "$k_",
            "$l_",
            "$m_",
            "$n_",
            "$o_",
            "$p_",
            "$q_",
            "$r_",
            "$s_",
            "$t_",
            "$u_",
            "$v_",
            "$w_",
            "$x_",
            "$y_",
            "$z_",
            "$A_",
            "$B_",
            "$C_",
            "$D_",
            "$E_",
            "$F_",
            "$G_",
            "$H_",
            "$I_",
            "$J_",
            "$K_",
            "$L_",
            "$M_",
            "$N_",
            "$O_",
            "$P_",
            "$Q_",
            "$R_",
            "$S_",
            "$T_",
            "$U_",
            "$V_",
            "$W_",
            "$X_",
            "$Y_",
            "$Z_",
            // $ last
            "_a$",
            "_b$",
            "_c$",
            "_d$",
            "_e$",
            "_f$",
            "_g$",
            "_h$",
            "_i$",
            "_j$",
            "_k$",
            "_l$",
            "_m$",
            "_n$",
            "_o$",
            "_p$",
            "_q$",
            "_r$",
            "_s$",
            "_t$",
            "_u$",
            "_v$",
            "_w$",
            "_x$",
            "_y$",
            "_z$",
            "_A$",
            "_B$",
            "_C$",
            "_D$",
            "_E$",
            "_F$",
            "_G$",
            "_H$",
            "_I$",
            "_J$",
            "_K$",
            "_L$",
            "_M$",
            "_N$",
            "_O$",
            "_P$",
            "_Q$",
            "_R$",
            "_S$",
            "_T$",
            "_U$",
            "_V$",
            "_W$",
            "_X$",
            "_Y$",
            "_Z$",
            // double up the $'s and _'s
            "$$a__",
            "$$b__",
            "$$c__",
            "$$d__",
            "$$e__",
            "$$f__",
            "$$g__",
            "$$h__",
            "$$i__",
            "$$j__",
            "$$k__",
            "$$l__",
            "$$m__",
            "$$n__",
            "$$o__",
            "$$p__",
            "$$q__",
            "$$r__",
            "$$s__",
            "$$t__",
            "$$u__",
            "$$v__",
            "$$w__",
            "$$x__",
            "$$y__",
            "$$z__",
            "$$A__",
            "$$B__",
            "$$C__",
            "$$D__",
            "$$E__",
            "$$F__",
            "$$G__",
            "$$H__",
            "$$I__",
            "$$J__",
            "$$K__",
            "$$L__",
            "$$M__",
            "$$N__",
            "$$O__",
            "$$P__",
            "$$Q__",
            "$$R__",
            "$$S__",
            "$$T__",
            "$$U__",
            "$$V__",
            "$$W__",
            "$$X__",
            "$$Y__",
            "$$Z__",
            "__a$$",
            "__b$$",
            "__c$$",
            "__d$$",
            "__e$$",
            "__f$$",
            "__g$$",
            "__h$$",
            "__i$$",
            "__j$$",
            "__k$$",
            "__l$$",
            "__m$$",
            "__n$$",
            "__o$$",
            "__p$$",
            "__q$$",
            "__r$$",
            "__s$$",
            "__t$$",
            "__u$$",
            "__v$$",
            "__w$$",
            "__x$$",
            "__y$$",
            "__z$$",
            "__A$$",
            "__B$$",
            "__C$$",
            "__D$$",
            "__E$$",
            "__F$$",
            "__G$$",
            "__H$$",
            "__I$$",
            "__J$$",
            "__K$$",
            "__L$$",
            "__M$$",
            "__N$$",
            "__O$$",
            "__P$$",
            "__Q$$",
            "__R$$",
            "__S$$",
            "__T$$",
            "__U$$",
            "__V$$",
            "__W$$",
            "__X$$",
            "__Y$$",
            "__Z$$",
            // double, but alternating
            "$_a_$",
            "$_b_$",
            "$_c_$",
            "$_d_$",
            "$_e_$",
            "$_f_$",
            "$_g_$",
            "$_h_$",
            "$_i_$",
            "$_j_$",
            "$_k_$",
            "$_l_$",
            "$_m_$",
            "$_n_$",
            "$_o_$",
            "$_p_$",
            "$_q_$",
            "$_r_$",
            "$_s_$",
            "$_t_$",
            "$_u_$",
            "$_v_$",
            "$_w_$",
            "$_x_$",
            "$_y_$",
            "$_z_$",
            "$_A_$",
            "$_B_$",
            "$_C_$",
            "$_D_$",
            "$_E_$",
            "$_F_$",
            "$_G_$",
            "$_H_$",
            "$_I_$",
            "$_J_$",
            "$_K_$",
            "$_L_$",
            "$_M_$",
            "$_N_$",
            "$_O_$",
            "$_P_$",
            "$_Q_$",
            "$_R_$",
            "$_S_$",
            "$_T_$",
            "$_U_$",
            "$_V_$",
            "$_W_$",
            "$_X_$",
            "$_Y_$",
            "$_Z_$",
            // do-si-do and grand right and left
            "_$a$_",
            "_$b$_",
            "_$c$_",
            "_$d$_",
            "_$e$_",
            "_$f$_",
            "_$g$_",
            "_$h$_",
            "_$i$_",
            "_$j$_",
            "_$k$_",
            "_$l$_",
            "_$m$_",
            "_$n$_",
            "_$o$_",
            "_$p$_",
            "_$q$_",
            "_$r$_",
            "_$s$_",
            "_$t$_",
            "_$u$_",
            "_$v$_",
            "_$w$_",
            "_$x$_",
            "_$y$_",
            "_$z$_",
            "_$A$_",
            "_$B$_",
            "_$C$_",
            "_$D$_",
            "_$E$_",
            "_$F$_",
            "_$G$_",
            "_$H$_",
            "_$I$_",
            "_$J$_",
            "_$K$_",
            "_$L$_",
            "_$M$_",
            "_$N$_",
            "_$O$_",
            "_$P$_",
            "_$Q$_",
            "_$R$_",
            "_$S$_",
            "_$T$_",
            "_$U$_",
            "_$V$_",
            "_$W$_",
            "_$X$_",
            "_$Y$_",
            "_$Z$_",
            // sprinkle in some digits, legally, however; should still be valid
            "a1",
            "b2",
            "c3",
            "d4",
            "e5",
            "f6",
            "g7",
            "h8",
            "i9",
            "j0",
            "k10",
            "l11",
            "m12",
            "n13",
            "o14",
            "p15",
            "q16",
            "r17",
            "s18",
            "t19",
            "u20",
            "v31",
            "w400",
            "x501",
            "y602",
            "z703",
            "A804",
            "B905",
            "C006",
            "D007",
            "E008",
            "F009",
            "G000",
            "H0a",
            "I1b",
            "J2c",
            "K3d",
            "L4e",
            "M5f",
            "N6g",
            "O7h",
            "P8i",
            "Q9j",
            "R0A",
            "S1B",
            "T2C",
            "U3D",
            "V4F",
            "W5G",
            "X6H",
            "Y7I",
            "Z8J",
            "$1a",
            "$b2",
            "$12c",
            "$d34",
            "$567e",
            "$f890",
            "$321g765",
            " 0 ",
            " -1 ",
            " $a ",
            " _a ",
            " b1 ",

            "$2h",
            "$3i",
            "$5j",
            "$4k",
            "$6l",
            "$7m",
            "$8n",
            "$9o",
            "$0p",
            "$q0",
            "$r1",
            "$s2",
            "$t3",
            "$u4",
            "$v5",
            "$w6",
            "$x7",
            "$y8",
            "$z9",
            "$0A0",
            "$1B2",
            "$3C4",
            "$5D6",
            "$7E8",
            "$9F0",
            "$1234567890G",
            "$H1234567890",
            "$1234567890I1234567890",
            "a1$",
            "b2$",
            "c3$",
            "d4$",
            "e5$",
            "f6$",
            "g7$",
            "h8$",
            "i9$",
            "j0$",
            "k$0",
            "l$1",
            "m$2",
            "n$3",
            "o$4",
            "p$5",
            "q$6",
            "r$7",
            "s$8",
            "t$9",
            "u0$1",
            "v2$3",
            "w4$5",
            "x6$7",
            "y8$9",
            "z01$23",
            "A45$67",
            "B89$01",
            "C111111$",
            "D$2222222",
            "E3333333$44444444",
            "$0a1$2",
            "$3b4$5",
            "$6c7$8",
            "$9d0$1",
            "$23e45$67",
            "$8901234f5678901$23456",
            "_0A",
            "_1B",
            "_2C",
            "_3D",
            "_4E",
            "_5F",
            "_6G",
            "_7H",
            "_8I",
            "_9J",
            "_K0",
            "_L1",
            "_M2",
            "_N3",
            "_O4",
            "_P5",
            "_Q6",
            "_R7",
            "_S8",
            "_T9",
            "_0U1",
            "_2V3",
            "_4W5",
            "_6X7",
            "_8Y9",
            "_01234567890Z1234567890",
            "a1_",
            "b2_",
            "c3_",
            "d4_",
            "e5_",
            "f6_",
            "g7_",
            "h8_",
            "i9_",
            "j0_",
            "k_1",
            "l_2",
            "m_3",
            "n_4",
            "o_5",
            "p_6",
            "q_7",
            "r_8",
            "s_9",
            "t_0",
            "u1_2",
            "v3_4",
            "w5_6",
            "x7_8",
            "y9_0",
            "z12_",
            "A34_",
            "B56_",
            "C78_",
            "D90_",
            "E_12",
            "F_34",
            "G_56",
            "H_78",
            "I_90",
            "J12_34",
            "K56_78",
            "L901234567_",
            "M_8901234567",
            "N89012345678_90123456789",
            "_1a2_3",
            "_4b5_6",
            "_7c8_9",
            "_01d22_33",
            "_55e11_78",
            "$9a0_1",
            "$2b3_4",
            "$5c6_7",
            "$8d9_0",
            "$1e2_3",
            "$4f5_6",
            "$7g8_9",
            "$0h1_2",
            "$3i4_5",
            "$6j7_8",
            "$90k12_34",
            "$567l890_123",
            "_4a5$6",
            "_7b8$9",
            "_0c1$2",
            "_3d4$5",
            "_6e7$8",
            "_9f0$1",
            "_23g45$67",
            "_890h123$456",



            "$1$a__",
            "$$2b__",
            "$$c3__",
            "$$d_4_",
            "$$e__5",
            "$$6f__",
            "$$g7__",
            "$$h_8_",
            "$$i__9",
            "$$j0__",
            "$$k_1_",
            "$$l__2",
            "$$m_3_",
            "$$n__4",
            "$56$78o__",
            "$90$p12__",
            "$34$q_56_",
            "$78$r__90",
            "$$12s34__",
            "$$56t_78_",
            "$$90u__12",
            "$$v34_56_",
            "$$w78__90",
            "$$x_12_34",
            "$56$78y90__",
            "$12$34z_56_",
            "$78$90A__12",
            "$34$B56_78_",
            "$90$C12__34",
            "$$56D78_90_",
            "$$12E34__56",
            "$$F78_90_12",
            "$34$G__",
            "$$56H__",
            "$$I78__",
            "$$J_90_",
            "$$K__12",
            "$34567$8901L2345_6789_01234",
            "_1_a$$",
            "__2b$$",
            "__c3$$",
            "__d$4$",
            "__e$$5",
            "__6f$$",
            "__g7$$",
            "__h$8$",
            "__i$$9",
            "__j0$$",
            "__k$1$",
            "__l$$2",
            "__m$3$",
            "__n$$4",
            "_56_78o$$",
            "_90_p12$$",
            "_34_q$56$",
            "_78_r$$90",
            "__12s34$$",
            "__56t$78$",
            "__90u$$12",
            "__v34$56$",
            "__w78$$90",
            "__x$12$34",
            "_56_78y90$$",
            "_12_34z$56$",
            "_78_90A$$12",
            "_34_B56$78$",
            "_90_C12$$34",
            "__56D78$90$",
            "__12E34$$56",
            "__F78$90$12",
            "_34_G$$",
            "__56H$$",
            "__I78$$",
            "__J$90$",
            "__K$$12",
            "_34567_8901L2345$6789$01234",
            // some not quite valid identifiers
            "0a",
            "1b",
            "2c",
            "3d",
            "4e",
            "5f",
            "6g",
            "7H",
            "8I",
            "9J",
            "10K",
            "40L",
            "50M",
            "60N",
            "70O",
            "80P",
            "90Q",
            "$0",
            "$1",
            "$2",
            "$3",
            "$4",
            "$53",
            "$61",
            "$7",
            "_8",
            "_9",
            "_10",
            "_40",
            "_50",
            "_60",
            "_70",
            "_80",
            "_90",
            "$",
            "_",
            "__",
            "_$",
            "$_",
            "$$",
            "$_$",
            "$$$",
            "_$_",
            "$$$$$",
            "______",

            // some valid binary expression, w and w/o ws
            "a+b",
            "c+1",
            "2+d",
            "3+4",
            "A+B",
            "C+-1",
            "-2+D",
            "-3+-4",
            "a +b",
            "c+ 1",
            " 2+d",
            "3+4 ",
            " A +B",
            " C+ -1",
            " -2+D ",
            "-3 + -4",
            "e1 +F2 ",
            " G3 + h4",
            " __c +$$d ",
            " __c+ $$d ",
            "_$a + -567 ",
            " -23 + -456 ",
            // double the spaces
            "a  +b",
            "c+  1",
            "  2+d",
            "3+4  ",
            " A  +B",
            " C+  -1",
            "  -2+D  ",
            "-3  +  -4",
            "e1  +F2  ",
            "  G3  +  h4",
            "  __c  +$$d  ",
            "  __c+  $$d  ",
            "_$a  +  -567  ",
            "  -23  +  -456  ",
            // do the other operators and work in \t, \r, \n
            "a/b",
            "c/1",
            "2/d",
            "3/4",
            "A/B",
            "C/-1",
            "-2/D",
            "-3/-4",
            "a /b",
            "c/ 1",
            " 2/d",
            "3/4\r ",
            " A\t /B",
            " C/ \n-1",
            "\t -2/D\r ",
            "-3\r\r /\t\t -4",
            "e1\n\n /F2\r\r ",
            " G3 \t/ \rh4",
            " __c \n/$$d ",
            " __c/\n\r\t $$d ",
            "_$a / \r\n\t-567 ",
            " -23\t \r \n /\r \n \t -456 ",
            "a  /b",
            "c/  1",
            "  2/d",
            "3/4  ",
            " A  /B",
            " C/  -1",
            "  -2/D  ",
            "-3  /  -4",
            "e1  /F2  ",
            "  G3  /  h4",
            "  __c  /$$d  ",
            "  __c/  $$d  ",
            "_$a  /  -567  ",
            "  -23  /  -456  ",
            "a*b",
            "c*1",
            "2*d",
            "3*4",
            "A*B",
            "C*-1",
            "-2*D",
            "-3*-4",
            "a *b",
            "c* 1",
            " 2*d",
            "3*4 ",
            " A *B",
            " C* -1",
            " -2*D ",
            "-3 * -4",
            "3*4\r ",
            " A\t *B",
            " C* \n-1",
            "\t -2*D\r ",
            "-3\r\r *\t\t -4",
            "e1\n\n *F2\r\r ",
            " G3 \t* \rh4",
            " __c \n*$$d ",
            " __c*\n\r\t $$d ",
            "_$a * \r\n\t-567 ",
            " -23\t \r \n *\r \n \t -456 ",

            "e1 *F2 ",
            " G3 * h4",
            " __c *$$d ",
            " __c* $$d ",
            "_$a * -567 ",
            " -23 * -456 ",
            "a  *b",
            "c*  1",
            "  2*d",
            "3*4  ",
            " A  *B",
            " C*  -1",
            "  -2*D  ",
            "-3  *  -4",
            "e1  *F2  ",
            "  G3  *  h4",
            "  __c  *$$d  ",
            "  __c*  $$d  ",
            "_$a  *  -567  ",
            "  -23  *  -456  ",

            "a%b",
            "c%1",
            "2%d",
            "3%4",
            "A%B",
            "C%-1",
            "-2%D",
            "-3%-4",
            "a %b",
            "c% 1",
            " 2%d",
            "3%4 ",
            " A %B",
            " C% -1",
            " -2%D ",
            "-3 % -4",
            "e1 %F2 ",
            " G3 % h4",
            " __c %$$d ",
            " __c% $$d ",
            "_$a % -567 ",
            " -23 % -456 ",
            "3%4\r ",
            " A\t %B",
            " C% \n-1",
            "\t -2%D\r ",
            "-3\r\r %\t\t -4",
            "e1\n\n %F2\r\r ",
            " G3 \t% \rh4",
            " __c \n%$$d ",
            " __c%\n\r\t $$d ",
            "_$a % \r\n\t-567 ",
            " -23\t \r \n %\r \n \t -456 ",
            "a  %b",
            "c%  1",
            "  2%d",
            "3%4  ",
            " A  %B",
            " C%  -1",
            "  -2%D  ",
            "-3  %  -4",
            "e1  %F2  ",
            "  G3  %  h4",
            "  __c  %$$d  ",
            "  __c%  $$d  ",
            "_$a  %  -567  ",
            "  -23  %  -456  ",
            // longer expressions with multiple operators
            "1+2+3+4+5+6+7+8+9+0",
            "1/2*3%4+5%6*7/8+9+0",
            "1+2*3+4+5+6+7+8+9+0",
            "1+2+3%4+5+6+7+8+9+0",
            "1+2+3+4*5+6+7+8+9+0",
            "1+2+3+4+5/6+7+8+9+0",
            "1+2+3+4+5+6*7+8+9+0",
            "1+2+3+4+5+6+7%8+9+0",
            "1/2/3/4/5/6/7/8/9/0",
            "1%2%3%4%5%6%7%8%9%0",
            "-1*2*3*4*5*6*7*8*9*0",
            "1+-2+3+4+5+6+7+8+9+0",
            "1/2*-3%4+5%6*7/8+9+0",
            "1+2*3+-4+5+6+7+8+9+0",
            "1+2+3%4+-5+6+7+8+9+0",
            "1+2+3+4*5+-6+7+8+9+0",
            "1+2+3+4+5/6+-7+8+9+0",
            "1+2+3+4+5+6*7+-8+9+0",
            "1+2+3+4+5+6+7%8+-9+0",
            "1/2/3/4/5/6/7/8/9/-0",
            "a%2%3%4%5%6%7%8%9%0",
            "1*b*3*4*5*6*7*8*9*0",
            "1+2+c+4+5+6+7+8+9+0",
            "1/2*3%c+5%6*7/8+9+0",
            "1+2*3+4+e+6+7+8+9+0",
            "1+2+3%4+5+b+7+8+9+0",
            "1+2+3+4*5+6+g+8+9+0",
            "1+2+3+4+5/6+7+h+9+0",
            "1+2+3+4+5+6*7+8+i+0",
            "1+2+3+4+5+6+7%8+9+j",
            "A/2/3/4/5/6/7/8/9/0",
            "1%B%3%4%5%6%7%8%9%0",
            "1*2*C*4*5*6*7*8*9*0",
            "1+2+3+D+5+6+7+8+9+0",
            "1/2*3%4+E%6*7/8+9+0",
            "1+2*3+4+5+F+7+8+9+0",
            "1+2+3%4+5+6+G+8+9+0",
            "1+2+3+4*5+6+7+H+9+0",
            "1+2+3+4+5/6+7+8+I+0",
            "1+2+3+4+5+6*7+8+9+J",
            "$a%2%3%4%5%6%7%8%9%0",
            "1*_b*3*4*5*6*7*8*9*0",
            "1+2+$$c+4+5+6+7+8+9+0",
            "1/2*3%$_D+5%6*7/8+9+0",
            "1+2*3+4+_$e+6+7+8+9+0",
            "1+2+3%4+5+__b+7+8+9+0",
            "1+2+3+4*5+6+g+8+9+0",
            "1+2+3+4+5/6+$G1+7+h+9+0",
            "1+2+3+4+5+6*7+8+_i2+0",
            "1+2+3+4+5+6+7%8+9+___j",
            "A/B/C/D/E/F/G/H/I/J",
            "1%B%3%4%5%6%7%8%9%0",
            "1*2*C*4*5*6*7*8*9*0",
            "1+2+3+D+5+6+7+8+9+0",
            // add some ws(I'll just use ' ', \n, \r and \t)
            " 1 +2+3+4+5+6+7+8+9+0",
            "\t1 +2+3+4+5+6+7+8+9+0",
            "\r1 +2+3+4+5+6+7+8+9+0",
            "\n1 +2+3+4+5+6+7+8+9+0",
            "1 +2+3+4+5+6+7+8+9+0",
            "1/\t2*3%4+5%6*7/8+9+0",
            "1+2*\r3+4+5+6+7+8+9+0",
            "1+2\n+3%4+5+6+7+8+9+0",
            "1+2+ 3+4*5+6+7+8+9+0",
            "1+2+3\t+4+5/6+7+8+9+0",
            "1+2+3+\r4+5+6*7+8+9+0",
            "1+2+3+4\n+5+6+7%8+9+0",
            "1/2/3/4/ 5/6/7/8/9/0",
            "1%2%3%4%5\t%6%7%8%9%0",
            "-1*2*3*4*5*\r6*7*8*9*0",
            "1+-2+3+4+5+6\n+7+8+9+0",
            "1/2*-3%4+5%6* 7/8+9+0",
            "1+2*3+-4+5+6+7\t+8+9+0",
            "1+2+3%4+-5+6+7+\r8+9+0",
            "1+2+3+4*5+-6+7+8\n+9+0",
            "1+2+3+4+5/6+-7+8+ 9+0",
            "1+2+3+4+5+6*7+-8+9\t+0",
            "1+2+3+4+5+6+7%8+-9+\r0",
            "1/2/3/4/5/6/7/8/9/-0\n",
            "1/2/3/4/5/6/7/8/9/-0\t",
            "1/2/3/4/5/6/7/8/9/-0\r",
            "1/2/3/4/5/6/7/8/9/-0 ",
            "a\t  %2%3%4%5%6%7%8%9%0",
            "1* \r b*3*4*5*6*7*8*9*0",
            "1+2  \n+c+4+5+6+7+8+9+0",
            "1/2* \t 3%c+5%6*7/8+9+0",
            "1+2*3  \r+4+e+6+7+8+9+0",
            "1+2+3%\n  4+5+b+7+8+9+0",
            "1+2+3+4 \t *5+6+g+8+9+0",
            "1+2+3+4+   \t5/6+7+h+9+0",
            "1+2+3+4+5 \t +6*7+8+i+0",
            "1+2+3+4+5+ \r 6+7%8+9+j",
            "A/2/3/4/5/6 \n /7/8/9/0",
            "1%B%3%4%5%6%\t  7%8%9%0",
            "1*2*C*4*5*6*7\r  *8*9*0",
            "1+2+3+D+5+6+7+\n  8+9+0",
            "1/2*3%4+E%6*7/8\t\t\t+9+0",
            "1+2*3+4+5+F+7+8+\r\r\r9+0",
            "1+2+3%4+5+6+G+8+9\n\n\n+0",
            "1+2+3+4*5+6+7+H+9+0\t\t\t",
            "1+2+3+4*5+6+7+H+9+0\r\r\r",
            "1+2+3+4*5+6+7+H+9+0\n\n\n",
            "1+2+3+4*5+6+7+H+9+0 \t \r \n",
            "\t   1+2+3+4+5+6*7+8+9+J",
            " \r  1+2+3+4+5+6*7+8+9+J",
            "   \n1+2+3+4+5+6*7+8+9+J",
            "\t\t\t1+2+3+4+5+6*7+8+9+J",
            "\r\r\r1+2+3+4+5+6*7+8+9+J",
            "\t  $a  \r% \n 2\r\r\t%\t \r \n3 \n\r\t  %\t\t\t4\r\r\r%\n\n\n5\r  %\n  6  \n%\t\t7\n\n%\r8\t% 9\r%\t0\n",
            "\t  $a  \r* \n 2\r\r\t*\t \r \n3 \n\r\t  *\t\t\t4\r\r\r*\n\n\n5\r  *\n  6  \n*\t\t7\n\n*\r8\t* 9\r*\t0\n",
            "\t  $a  \r/ \n 2\r\r\t/\t \r \n3 \n\r\t  /\t\t\t4\r\r\r/\n\n\n5\r  /\n  6  \n/\t\t7\n\n/\r8\t/ 9\r/\t0\n",
            "\t  $a  \r+ \n 2\r\r\t+\t \r \n3 \n\r\t  +\t\t\t4\r\r\r+\n\n\n5\r  +\n  6  \n+\t\t7\n\n+\r8\t+ 9\r+\t0\n",
            "\t  $a  \r% \n 2\r\r\t+\t \r \n3 \n\r\t  /\t\t\t4\r\r\r*\n\n\n5\r  %\n  6  \n+\t\t7\n\n/\r8\t% 9\r*\t0\n",
            "\t  $a  \r+ \n 2\r\r\t/\t \r \n3 \n\r\t  *\t\t\t4\r\r\r%\n\n\n5\r  +\n  6  \n/\t\t7\n\n*\r8\t% 9\r+\t0\n",
            "\t  $a  \r/ \n 2\r\r\t*\t \r \n3 \n\r\t  %\t\t\t4\r\r\r+\n\n\n5\r  /\n  6  \n*\t\t7\n\n%\r8\t+ 9\r/\t0\n",
            "\t  $a  \r* \n 2\r\r\t%\t \r \n3 \n\r\t  +\t\t\t4\r\r\r/\n\n\n5\r  *\n  6  \n%\t\t7\n\n+\r8\t/ 9\r*\t0\n",

            // some simple valid expressions
            "1 + 2",
            "3 + a",
            "b + 4",
            "c + d",
            "1 - 2",
            "3 - a",
            "b - 4",
            "c - d",
            "1 * 2",
            "3 * a",
            "b * 4",
            "c * d",
            "1 / 2",
            "3 / a",
            "b / 4",
            "c / d",
            "1 % 2",
            "3 % a",
            "b % 4",
            "c % d",

            // some invalid expressions
            "a|b",
            "a \\ b",
            "a++n",
            "a**n",
            "a//n",
            "a%%n",
            "a+b/",
            "c/1+",
            "2*d*",
            "3%4%",
            "/A+B",
            "*C*-1",
            "%-2/D",

            "+a%b",
            "a c+1",
            "3 2/d",
            "3+5 4",
            "A 5 *B",
            "6 C/-1",
            "-2%D 8"
    };
    private static String substEscapes(String s){
/*

replaces some of the \s whitespace characters with
the escape sequences used for them and adds single quotes
around the string to make white space visible in
the display.

It also replaces null with the empty string, which will
NOT have the single quotes around it.

*/
        if (s == null)
            return "";

        StringBuilder b = new StringBuilder();

        char[] A = s.toCharArray();
        char c;

        int
                i,
                len = A.length;

        b.append('\'');
        for (i = 0; i < len; i++){
            c = A[i];
            if (c == '\t')
                b.append("\\t");
            else  if (c == '\r')
                b.append("\\r");
            else  if (c == '\n')
                b.append("\\n");
            else  if (c == '\f')
                b.append("\\f");
            else  if (c == '\b')
                b.append("\\b");
            else
                b.append(c);
        }
        // add the final \' to mark the end of the string
        b.append('\'');
        return b.toString();
    }

    public static void main (String[] args) {
        int i;

        System.out.println("\nTests for prob1d\n");

        for (i = 0; i < tests1.length; i++)
            System.out.println("Test " + String.format("%4d", i) + " string = " + String.format("%-30s",substEscapes(tests1[i])) + " result = " + Pattern.matches(prob1d, tests1[i]));

        System.out.println("\nTests for prob2e\n");

        for (i = 0; i < tests2.length; i++)
            System.out.println("Test " + String.format("%4d", i) + " string = " + String.format("%-30s",substEscapes(tests2[i])) + " result = " + Pattern.matches(prob2e, tests2[i]));

    }

}
